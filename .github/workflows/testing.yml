name: Build and run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-24.04

    env:
      R_LIBS_USER: ~/R_libs:~/R:~/R-dev
      # To get round rate limits in Github installs
      # https://github.com/r-lib/remotes/issues/638
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    strategy:

      matrix:

        include:

        # - python-version: "3.10"
        # - python-version: "3.11"
          - python-version: "3.12"
        # - python-version: "3.13"

    steps:
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.local
            ~/.ccache
            ~/R
            ~/R_libs
            ~/R-dev
          key: ${{ runner.os }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('.ci/install_r_requirements.R') }}

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'

      - name: Install Python test dependencies
        run: |
          pip install -r test-requirements.txt

      - name: Install rnbgrader
        run: |
          pip install .

      - name: Intall IRKernel
        # To register IRKernel in the current R installation
        # Run here after we have installed jupyter-client
        run: |
          Rscript -e "install.packages('IRkernel')"
          Rscript -e "IRkernel::installspec()"

      - name: Pyest-cov to allow coverage
        run: |
          pip install pytest-cov

      - name: Run tests
        run: |
          pytest rnbgrader --log-level DEBUG --cov-config=.coveragerc --cov=rnbgrader

      - name: Collect code coverage data
        run: |
          coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          fail_ci_if_error: true
