language: python

sudo: true

cache:
  directories:
    - $HOME/.cache/pip

env:
    global:
        # Depends also on jupyter_client, but this must be installed earlier
        - DEPENDS="pypandoc"
        - PKG_NAME=rnbgrader
        - INSTALL_TYPE="pip"
        # URL for extra wheel repo
        - EXTRA_WHEELS="https://5cf40426d9f06eb7461d-6fe47d9331aba7cd62fc36c7196769e4.ssl.cf2.rackcdn.com"
        # Version of pandoc to install
        - PANDOC_VERSION=2.0.5

python:
    - 3.4
    - 3.5
    - 3.6

matrix:
  include:
    - python: 3.5
      env:
        - COVERAGE=1
        - DOCTESTS=1
    # Add absolute minimum dependencies
    - python: 3.5
      env:
        - PANDOC_VERSION=1.13.2
    # Check also requirements.txt
    - python: 3.5
      env:
        - INSTALL_TYPE=setup
    - python: 3.5
      env:
        - INSTALL_TYPE=sdist
    - python: 3.5
      env:
        - INSTALL_TYPE=wheel
    - python: 3.5
      env:
        - INSTALL_TYPE=requirements
        - DEPENDS=
    - python: 3.5
      env:
        - BUILD_DOC=1
    # Test pre-release versions of everything
    - python: 3.5
      env:
        - EXTRA_PIP_FLAGS="--pre"

before_install:
    # Install the latest version of R
    - sudo apt-get install software-properties-common
    - sudo add-apt-repository -y ppa:marutter/rrutter
    - sudo apt-get update
    - sudo apt-get install -y r-base-dev
    # Install irkernel
    # https://stackoverflow.com/questions/39805798/r-inline-plots-in-jupyter
    # https://irkernel.github.io/docs/IRkernel/0.7
    - echo 'options("repos"="http://cran.rstudio.com")' > ~/.Rprofile
    - sudo Rscript -e "install.packages(c('repr', 'IRdisplay', 'crayon', 'pbdZMQ', 'devtools'))"
    - sudo Rscript -e "devtools::install_github('IRkernel/IRkernel')"
    # For pypandoc
    - PANDOC_DEB="pandoc-${PANDOC_VERSION}-1-amd64.deb"
    - curl -LO https://github.com/jgm/pandoc/releases/download/$PANDOC_VERSION/$PANDOC_DEB
    - sudo dpkg --install $PANDOC_DEB
    # Update virtualenv etc
    - pip install -U virtualenv
    - virtualenv --python=python venv
    - source venv/bin/activate
    - python -m pip install --upgrade pip wheel
    - python --version  # just to check
    # Install R kernel spec. See: https://irkernel.github.io/docs/IRkernel
    - pip install jupyter_client
    - Rscript -e "IRkernel::installspec()"
    - pip install pytest # always
    - pip install $EXTRA_PIP_FLAGS -f $EXTRA_WHEELS $DEPENDS
    - if [ -n "$COVERAGE" ]; then
      pip install coverage;
      pip install codecov;
      fi

install:
    - |
      if [ "$INSTALL_TYPE" == "pip" ]; then
          pip install .
      elif [ "$INSTALL_TYPE" == "setup" ]; then
          python setup.py install
      elif [ "$INSTALL_TYPE" == "sdist" ]; then
        python setup.py egg_info  # check egg_info while we're here
        python setup.py sdist
        pip install -f $EXTRA_WHEELS dist/*.tar.gz
      elif [ "$INSTALL_TYPE" == "wheel" ]; then
        pip install wheel
        python setup.py bdist_wheel
        pip install -f $EXTRA_WHEELS dist/*.whl
      elif [ "$INSTALL_TYPE" == "requirements" ]; then
        pip install -f $EXTRA_WHEELS -r requirements.txt
        python setup.py install
      fi

script:
    - |
      if [ -n "$BUILD_DOC" ]; then
        # Build documentation
        pip install -r doc-requirements.txt
        cd doc
        # Make warnings function as errors on Sphinx build
        export SPHINXOPTS='-W'
        make html
        make doctest
      else
        pip install -r test-requirements.txt
        # Change into an innocuous directory and find tests from installation
        mkdir for_testing
        cd for_testing
        if [ -n "$COVERAGE" ]; then
          cp ../.coveragerc .;
          pip install pytest-cov
          COVER_ARGS="--cov=$PKG_NAME";
        fi
        if [ -n "$DOCTESTS" ]; then
          DOCTEST_ARGS="--doctest-modules"
        fi
        py.test $COVER_ARGS $DOCTEST_ARGS ../$PKG_NAME
      fi

after_success:
    - if [ -n "$COVERAGE" ]; then codecov; fi
